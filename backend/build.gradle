/*
 * ================================================================
 * üåê CENATE BACKEND - SPRING BOOT (Gradle)
 * Compatible con Java 17, Spring Boot 3.5.6 y PostgreSQL
 * ================================================================
 */

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.styp.cenate'
version = '0.0.1-SNAPSHOT'
description = 'CENATE API - Sistema de Gesti√≥n'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

/* ================================================================
   üì¶ DEPENDENCIAS
   ================================================================ */
dependencies {
    // üîπ SPRING BOOT STARTERS
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // üîπ ACTUATOR (para healthcheck y monitoreo Docker)
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // üîπ AOP (para MBAC Permission Aspect)
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // üîπ BASE DE DATOS
    runtimeOnly 'org.postgresql:postgresql'

    // üîπ JWT (Autenticaci√≥n segura)
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    // üîπ SWAGGER / OPENAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // üîπ MODEL MAPPER
    implementation 'org.modelmapper:modelmapper:3.2.0'

    // üîπ UTILIDADES COMUNES
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'commons-io:commons-io:2.15.1'

    // ============================================================
    // ‚úÖ LOMBOK (activado correctamente)
    // ============================================================
    compileOnly 'org.projectlombok:lombok:1.18.40'
    annotationProcessor 'org.projectlombok:lombok:1.18.40'
    testCompileOnly 'org.projectlombok:lombok:1.18.40'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.40'

    // üîπ TESTING
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

/* ================================================================
   ‚öôÔ∏è CONFIGURACI√ìN DE SPRING BOOT
   ================================================================ */
springBoot {
    mainClass = 'com.styp.cenate.CenateApplication'
}

/* ================================================================
   üß© CONFIGURACI√ìN DE EMPAQUETADO (bootJar)
   ================================================================ */
bootJar {
    enabled = true
    archiveFileName = 'cenate-0.0.1-SNAPSHOT.jar'
    exclude("**/com/styp/cenate/api/admin/PermisoActivoViewServiceImpl.class")
}

/* ================================================================
   üß± CONFIGURACI√ìN DEL JAR SECUNDARIO
   ================================================================ */
jar {
    enabled = false
}

/* ================================================================
   üß± TAREAS PERSONALIZADAS Y COMPILACI√ìN
   ================================================================ */
tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('cleanBuild') {
    dependsOn 'clean', 'build'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-parameters']
}

tasks.withType(Test).configureEach {
    systemProperty "spring.profiles.active", "test"
    testLogging {
        events "passed", "skipped", "failed"
    }
}

/* ================================================================
   ‚úÖ OPTIMIZACI√ìN PARA ENTORNOS DOCKER / CI
   ================================================================ */
tasks.withType(org.springframework.boot.gradle.tasks.bundling.BootJar) {
    launchScript()
}