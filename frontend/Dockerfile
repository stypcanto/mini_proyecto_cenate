# ============================================================
# ‚ö° Multi-stage Dockerfile para React (CRA / Vite) + Nginx
# Optimizado para builds r√°pidos, reproducibles y portables (Mac M1/M2 compatible)
# ============================================================

# ---------------------------
# üß© Etapa 1: Build del frontend
# ---------------------------
FROM --platform=linux/amd64 node:18-alpine AS build
WORKDIR /app

# ------------------------------------------------------------
# ‚úÖ Copiar solo lo necesario para aprovechar la cache
# ------------------------------------------------------------
COPY package.json package-lock.json ./

# ------------------------------------------------------------
# ‚öôÔ∏è Instalar dependencias con fallback inteligente
# Si npm ci falla (por lock desactualizado), ejecuta npm install
# ------------------------------------------------------------
RUN npm ci --prefer-offline --no-audit --progress=false || \
    (echo "‚ö†Ô∏è npm ci fall√≥, usando npm install..." && \
     npm install --legacy-peer-deps --no-audit --progress=false)

# ------------------------------------------------------------
# üì¶ Copiar el c√≥digo fuente del proyecto
# ------------------------------------------------------------
COPY . .

# ------------------------------------------------------------
# üîß Configurar variables de entorno (React)
# ------------------------------------------------------------
ARG REACT_APP_API_URL
ENV REACT_APP_API_URL=${REACT_APP_API_URL}

# ------------------------------------------------------------
# üöÄ Compilar el frontend para producci√≥n
# ------------------------------------------------------------
RUN npm run build

# ---------------------------
# üåê Etapa 2: Servidor Nginx
# ---------------------------
FROM --platform=linux/amd64 nginx:alpine

# ------------------------------------------------------------
# üßπ Limpiar configuraci√≥n por defecto y aplicar la nuestra
# ------------------------------------------------------------
RUN rm -rf /etc/nginx/conf.d/*
COPY default.conf /etc/nginx/conf.d/default.conf

# ------------------------------------------------------------
# üìÅ Copiar build generado desde la etapa anterior
# ------------------------------------------------------------
COPY --from=build /app/build /usr/share/nginx/html

# ------------------------------------------------------------
# üåé Configuraci√≥n final
# ------------------------------------------------------------
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]