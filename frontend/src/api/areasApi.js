// ========================================================================
// üè¢ API DE √ÅREAS - CENATE
// ========================================================================

import { API_BASE, getHeaders, handleResponse } from "@/config/api";

/**
 * üìã Obtiene todas las √°reas
 */
export const getAreas = async () => {
  try {
    const response = await fetch(`${API_BASE}/areas`, {
      method: 'GET',
      headers: getHeaders(true),
    });
    return await handleResponse(response);
  } catch (error) {
    console.error('‚ùå Error obteniendo √°reas:', error);
    throw error;
  }
};

/**
 * üîç Obtiene un √°rea por ID
 */
export const getAreaById = async (id) => {
  try {
    const response = await fetch(`${API_BASE}/areas/${id}`, {
      method: 'GET',
      headers: getHeaders(true),
    });
    return await handleResponse(response);
  } catch (error) {
    console.error(`‚ùå Error obteniendo √°rea ${id}:`, error);
    throw error;
  }
};

/**
 * ‚ûï Crea una nueva √°rea
 */
export const createArea = async (areaData) => {
  try {
    const response = await fetch(`${API_BASE}/areas`, {
      method: 'POST',
      headers: getHeaders(true),
      body: JSON.stringify(areaData),
    });
    return await handleResponse(response);
  } catch (error) {
    console.error('‚ùå Error creando √°rea:', error);
    throw error;
  }
};

/**
 * ‚úèÔ∏è Actualiza un √°rea existente
 */
export const updateArea = async (id, areaData) => {
  try {
    const response = await fetch(`${API_BASE}/areas/${id}`, {
      method: 'PUT',
      headers: getHeaders(true),
      body: JSON.stringify(areaData),
    });
    return await handleResponse(response);
  } catch (error) {
    console.error(`‚ùå Error actualizando √°rea ${id}:`, error);
    throw error;
  }
};

/**
 * üóëÔ∏è Elimina un √°rea
 */
export const deleteArea = async (id) => {
  try {
    const response = await fetch(`${API_BASE}/areas/${id}`, {
      method: 'DELETE',
      headers: getHeaders(true),
    });
    return await handleResponse(response);
  } catch (error) {
    console.error(`‚ùå Error eliminando √°rea ${id}:`, error);
    throw error;
  }
};
