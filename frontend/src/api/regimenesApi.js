// ========================================================================
// ‚öôÔ∏è API DE REG√çMENES LABORALES - CENATE
// ========================================================================

import { API_BASE, getHeaders, handleResponse } from "../config/api"; // ‚úÖ usa ruta relativa (CRA compatible)

/**
 * üìã Obtener todos los reg√≠menes laborales
 */
export const getRegimenes = async () => {
    try {
        const response = await fetch(`${API_BASE}/regimenes`, {
            method: "GET",
            headers: getHeaders(true), // incluye token JWT si aplica
        });
        return await handleResponse(response);
    } catch (error) {
        console.error("‚ùå Error obteniendo reg√≠menes:", error);
        return [];
    }
};

/**
 * ‚ûï Crear un nuevo r√©gimen laboral
 * @param {Object} regimen - Datos del nuevo r√©gimen
 */
export const createRegimen = async (regimen) => {
    try {
        const response = await fetch(`${API_BASE}/regimenes`, {
            method: "POST",
            headers: getHeaders(true),
            body: JSON.stringify(regimen),
        });
        return await handleResponse(response);
    } catch (error) {
        console.error("‚ùå Error creando r√©gimen:", error);
        throw error;
    }
};

/**
 * ‚úèÔ∏è Actualizar un r√©gimen laboral existente
 * @param {number|string} id - ID del r√©gimen
 * @param {Object} regimen - Datos actualizados
 */
export const updateRegimen = async (id, regimen) => {
    try {
        const response = await fetch(`${API_BASE}/regimenes/${id}`, {
            method: "PUT",
            headers: getHeaders(true),
            body: JSON.stringify(regimen),
        });
        return await handleResponse(response);
    } catch (error) {
        console.error(`‚ùå Error actualizando r√©gimen ${id}:`, error);
        throw error;
    }
};

/**
 * üóëÔ∏è Eliminar un r√©gimen laboral
 * @param {number|string} id - ID del r√©gimen a eliminar
 */
export const deleteRegimen = async (id) => {
    try {
        const response = await fetch(`${API_BASE}/regimenes/${id}`, {
            method: "DELETE",
            headers: getHeaders(true),
        });
        return await handleResponse(response);
    } catch (error) {
        console.error(`‚ùå Error eliminando r√©gimen ${id}:`, error);
        throw error;
    }
};