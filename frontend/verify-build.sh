#!/bin/bash

# ========================================================================
# üîç Script de Verificaci√≥n Pre-Build - Frontend CENATE
# ========================================================================
# Verifica que todos los imports y dependencias est√©n correctos
# antes de hacer el build de producci√≥n
# ========================================================================

echo "üîç Verificando proyecto frontend..."
echo ""

# Colores
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

ERRORS=0

# Verificar que estamos en el directorio correcto
if [ ! -f "package.json" ]; then
    echo -e "${RED}‚ùå Error: No se encontr√≥ package.json${NC}"
    echo "Ejecuta este script desde el directorio frontend/"
    exit 1
fi

echo "‚úÖ Directorio correcto"

# Verificar node_modules
if [ ! -d "node_modules" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  node_modules no encontrado. Ejecutando npm install...${NC}"
    npm install
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå Error al instalar dependencias${NC}"
        exit 1
    fi
fi

echo "‚úÖ Dependencias instaladas"

# Verificar archivos cr√≠ticos
echo ""
echo "üìÅ Verificando archivos cr√≠ticos..."

FILES=(
    "src/api/personal.js"
    "src/api/permisosApi.js"
    "src/pages/admin/AdminPersonalPanel.jsx"
    "src/components/ui/PersonalDetailCard.jsx"
    "src/hooks/useAuth.js"
)

for file in "${FILES[@]}"; do
    if [ -f "$file" ]; then
        echo -e "  ${GREEN}‚úì${NC} $file"
    else
        echo -e "  ${RED}‚úó${NC} $file - NO ENCONTRADO"
        ERRORS=$((ERRORS + 1))
    fi
done

if [ $ERRORS -gt 0 ]; then
    echo ""
    echo -e "${RED}‚ùå Se encontraron $ERRORS archivos faltantes${NC}"
    exit 1
fi

# Verificar imports problem√°ticos
echo ""
echo "üîé Buscando imports problem√°ticos..."

# Buscar getPermisosByRol
if grep -r "getPermisosByRol" src/ --include="*.jsx" --include="*.js" > /dev/null 2>&1; then
    echo -e "  ${GREEN}‚úì${NC} getPermisosByRol encontrado (debe estar exportado en permisosApi.js)"
    
    # Verificar que est√© exportado
    if grep "export.*getPermisosByRol" src/api/permisosApi.js > /dev/null 2>&1; then
        echo -e "    ${GREEN}‚úì${NC} Funci√≥n exportada correctamente"
    else
        echo -e "    ${RED}‚úó${NC} Funci√≥n NO exportada en permisosApi.js"
        ERRORS=$((ERRORS + 1))
    fi
fi

# Buscar updatePermiso
if grep -r "updatePermiso" src/ --include="*.jsx" --include="*.js" > /dev/null 2>&1; then
    echo -e "  ${GREEN}‚úì${NC} updatePermiso encontrado (debe estar exportado en permisosApi.js)"
    
    # Verificar que est√© exportado
    if grep "export.*updatePermiso" src/api/permisosApi.js > /dev/null 2>&1; then
        echo -e "    ${GREEN}‚úì${NC} Funci√≥n exportada correctamente"
    else
        echo -e "    ${RED}‚úó${NC} Funci√≥n NO exportada en permisosApi.js"
        ERRORS=$((ERRORS + 1))
    fi
fi

# Buscar getDetallePersonal
if grep "getDetallePersonal" src/pages/admin/AdminPersonalPanel.jsx > /dev/null 2>&1; then
    echo -e "  ${GREEN}‚úì${NC} getDetallePersonal encontrado en AdminPersonalPanel.jsx"
    
    # Verificar que est√© exportado en personal.js
    if grep "export.*getDetallePersonal" src/api/personal.js > /dev/null 2>&1; then
        echo -e "    ${GREEN}‚úì${NC} Funci√≥n exportada correctamente en personal.js"
    else
        echo -e "    ${RED}‚úó${NC} Funci√≥n NO exportada en personal.js"
        ERRORS=$((ERRORS + 1))
    fi
fi

if [ $ERRORS -gt 0 ]; then
    echo ""
    echo -e "${RED}‚ùå Se encontraron $ERRORS problemas de imports${NC}"
    exit 1
fi

# Verificar sintaxis con ESLint (si est√° instalado)
echo ""
echo "üîß Verificando sintaxis..."

if command -v eslint &> /dev/null; then
    echo "Ejecutando ESLint..."
    npx eslint src/ --ext .js,.jsx --max-warnings 0 2>&1 | head -20
else
    echo -e "${YELLOW}‚ö†Ô∏è  ESLint no instalado, saltando verificaci√≥n de sintaxis${NC}"
fi

# Intentar compilar
echo ""
echo "üèóÔ∏è  Intentando compilar..."
echo ""

npm run build 2>&1 | tee build-output.log

if [ ${PIPESTATUS[0]} -eq 0 ]; then
    echo ""
    echo -e "${GREEN}‚úÖ ¬°BUILD EXITOSO!${NC}"
    echo ""
    echo "El build de producci√≥n se gener√≥ correctamente en:"
    echo "  üì¶ ./build/"
    echo ""
    echo "Ahora puedes:"
    echo "  ‚Ä¢ Ejecutar: docker-compose up --build"
    echo "  ‚Ä¢ O servir localmente: npx serve -s build"
    exit 0
else
    echo ""
    echo -e "${RED}‚ùå BUILD FALL√ì${NC}"
    echo ""
    echo "Revisa los errores anteriores o el archivo:"
    echo "  üìÑ build-output.log"
    echo ""
    echo "Errores comunes:"
    echo "  ‚Ä¢ Imports faltantes"
    echo "  ‚Ä¢ Funciones no exportadas"
    echo "  ‚Ä¢ Sintaxis JSX incorrecta"
    exit 1
fi
